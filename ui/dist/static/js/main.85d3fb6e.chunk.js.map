{"version":3,"sources":["components/Button.tsx","components/Header.tsx","components/Footer.tsx","components/Layout.tsx","components/Main.tsx","screens/Home/HomeScreen.tsx","components/FavouriteButton.tsx","screens/Posts/components/Post.tsx","screens/Posts/components/PostDetail.tsx","screens/Posts/hooks/usePostsReducer.ts","screens/Posts/components/PostDetailPlaceholder.tsx","screens/Posts/PostsScreen.tsx","screens/Favourite/FavouriteScreen.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["PrimaryStyle","css","Button","styled","button","props","active","primary","secondary","text","Container","div","Left","Nav","nav","Logo","Header","to","Footer","href","target","rel","Layout","children","Col","StyledMain","Main","HomeScreen","StyledButton","FavouriteButton","onClick","width","height","xmlns","d","ContentContainer","Avatar","Info","InfoHeader","Actions","Name","h2","Headline","h3","Description","Timestamp","AvatarImage","img","Post","data","handleFavouriteToggle","id","src","favourite","title","PostDetail","description","initialState","jobs","talents","activePost","undefined","PostsReducer","state","action","type","fetchedJobs","payload","map","job","activeJob","find","Title","h1","Subtitle","Quote","p","PostDetailPlaceholder","ListContainer","DetailsContainer","PostsScreen","React","useReducer","dispatch","setActiveJob","useCallback","toggleFavouriteJob","updateJobs","actions","useMemo","match","useRouteMatch","params","useEffect","axios","get","then","res","usePostsReducer","key","e","stopPropagation","FavouriteScreen","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.85d3fb6e.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\n\nconst PrimaryStyle = css`\n  background-color: var(--color-blue);\n  color: #fff;\n`;\n\ntype ButtonType = {\n  active?: boolean;\n  primary?: boolean;\n  secondary?: boolean;\n  text?: boolean;\n};\n\nconst Button = styled.button<ButtonType>`\n  background-color: var(--color-blue);\n  color: #fff;\n  background-color: var(--color-grey-200);\n  color: var(--color-darkblue);\n  border-radius: 0.875rem;\n  border: none;\n  font-size: 1rem;\n  font-weight: bold;\n  padding: 0.75rem 1.5rem;\n  cursor: pointer;\n\n  &:hover {\n    ${PrimaryStyle}\n  }\n\n  ${(props) => {\n    if (props.active || props.primary)\n      return css`\n        ${PrimaryStyle}\n      `;\n    if (props.secondary)\n      return css`\n        background-color: #fff;\n        color: var(--color-blue);\n      `;\n    if (props.text)\n      return css`\n        background-color: transparent;\n      `;\n  }}\n`;\n\nexport default Button;\n","import * as React from \"react\";\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport Button from \"./Button\"\n\nconst Container = styled.div`\n  grid-area: header;\n  display: flex;\n  padding: 2.25rem;\n`;\n\nconst Left = styled.div`\n  flex: 0 0 auto;\n  width: 250px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Nav = styled.nav`\n  flex 1 1 auto;\n\n  ul {\n    margin: 0;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    list-style: none;\n  }\n  li + li {\n    margin-left: 1rem;\n  }\n`;\n\nconst Logo = styled.div`\n  font-size: 3rem;\n`;\n\ntype HeaderProps = {\n};\n\nfunction Header(props: HeaderProps) {\n  return (\n    <Container>\n      <Left>\n        <Link to=\"/\">\n          <Logo>Logo</Logo>\n        </Link>\n      </Left>\n      <Nav>\n        <ul>\n          <li>Already a member?</li>\n          <li><Link to=\"/\"><Button text>Sign In</Button></Link></li>\n          <li><Link to=\"/\"><Button primary>Sign Up</Button></Link></li>\n          <li><Link to=\"/\"><Button secondary>New Post</Button></Link></li>\n          <li><Link to=\"/favourite\">Favourite</Link></li>\n          <li><Link to=\"/\">Profile</Link></li>\n        </ul>\n      </Nav>\n    </Container>\n  );\n}\n\nexport default Header;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  grid-area: footer;\n  color: var(--color-grey-300);\n\n  ul {\n    display: flex;\n    justify-content: center;\n    margin-top: 2rem;\n    list-style: none;\n    font-size: 0.875rem;\n  }\n  li:not(:last-child):after {\n    content: \"Â·\";\n    display: inline-block;\n    margin: 0 0.3rem;\n  }\n  a {\n    color: currentColor;\n    &:hover {\n      color: var(--color-blue);\n    }\n  }\n`;\n\ntype FooterProps = {};\n\nfunction Footer(props: FooterProps) {\n  return (\n    <Container>\n      <ul>\n        <li>\n          <a href=\"/\">About</a>\n        </li>\n        <li>\n          <a href=\"/\">Privacy</a>\n        </li>\n        <li>\n          <a href=\"/\">Terms</a>\n        </li>\n        <li>\n          <a\n            href=\"https://github.com/jobsgowhere/jobsgowhere\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            Github Repo\n          </a>\n        </li>\n        <li>\n          <a href=\"/\">Contact Us</a>\n        </li>\n      </ul>\n    </Container>\n  );\n}\n\nexport default Footer;\n","import * as React from \"react\";\nimport styled from 'styled-components';\n\nimport Header from './Header';\nimport Footer from './Footer';\n\nconst Container = styled.div`\n  background-color: var(--color-background);\n  display: grid;\n  grid-template-columns: 100px auto 100px;\n  grid-template-rows: 100px auto 100px;\n  grid-template-areas:\n    \"header header header\"\n    \". main .\"\n    \"footer footer footer\";\n  min-height: 100vh;\n`;\n\ntype LayoutProps = {\n  children: React.ReactNode,\n};\n\nfunction Layout(props: LayoutProps) {\n  const { children } = props;\n  return (\n    <Container>\n      <Header />\n      {children}\n      <Footer />\n    </Container>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Col = styled.div`\n  max-width: 29.75rem;\n  width: 100%;\n  & + & {\n    margin-left: 1.375rem;\n  }\n`;\n\nconst StyledMain = styled.div`\n  grid-area: main;\n  display: flex;\n  justify-content: center;\n`;\n\ntype MainProps = {\n  children: React.ReactNode;\n};\n\nconst Main = ({ children }: MainProps) => <StyledMain>{children}</StyledMain>;\n\nMain.Col = Col;\n\nexport default Main;\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Button from \"../../components/Button\";\nimport Main from \"../../components/Main\";\n\ntype HomeScreenProps = {};\n\nfunction HomeScreen(props: HomeScreenProps) {\n  return (\n    <Main>\n      <Main.Col>\n        <p>\n          <Link to=\"/posts\">\n            <Button primary>Go to jobs board</Button>\n          </Link>\n        </p>\n        <p>\n          <Link to=\"/favourite\">\n            <Button secondary>Favourite</Button>\n          </Link>\n        </p>\n      </Main.Col>\n      <Main.Col>\n        <div>\n          <h2>Buttons</h2>\n          <p>\n            <Button>Default Button</Button>\n          </p>\n          <p>\n            <Button primary>Primary Button</Button>\n          </p>\n          <p>\n            <Button secondary>Secondary Button</Button>\n          </p>\n          <p>\n            <Button active>Active Button</Button>\n          </p>\n        </div>\n      </Main.Col>\n    </Main>\n  );\n}\n\nexport default HomeScreen;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button<{ active: boolean }>`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  fill: ${(props) =>\n    props.active ? \"var(--color-blue)\" : \"var(--color-grey-300)\"};\n  padding: 0.1875rem 0.125rem;\n  outline: none;\n\n  &:hover {\n    fill: var(--color-blue);\n  }\n\n  svg {\n    display: block;\n  }\n`;\n\ntype FavouriteButtonProps = {\n  active?: boolean;\n  onClick?(event: React.MouseEvent<HTMLButtonElement>): void;\n};\n\nconst FavouriteButton = ({ active = false, onClick }: FavouriteButtonProps) => (\n  <StyledButton onClick={onClick} active={active}>\n    <svg width=\"22\" height=\"20\" xmlns=\"http://www.w3.org/2000/svg\">\n      {active ? (\n        <path d=\"M20.633 4.647a6.093 6.093 0 0 0-1.334-1.94A6.219 6.219 0 0 0 14.93.93 6.26 6.26 0 0 0 11 2.315 6.26 6.26 0 0 0 7.07.93 6.219 6.219 0 0 0 2.7 2.706a6.057 6.057 0 0 0-1.825 4.33c0 .78.16 1.593.476 2.42.265.692.644 1.409 1.13 2.133.768 1.146 1.825 2.341 3.138 3.553a35.068 35.068 0 0 0 4.42 3.453l.556.356a.753.753 0 0 0 .808 0l.556-.357a35.517 35.517 0 0 0 4.42-3.452c1.312-1.211 2.37-2.407 3.138-3.553.485-.724.867-1.441 1.13-2.133.316-.827.476-1.64.476-2.42a5.968 5.968 0 0 0-.49-2.39z\" />\n      ) : (\n        <path d=\"M21.534 3.924a6.349 6.349 0 00-1.389-2.022 6.478 6.478 0 00-4.55-1.85A6.52 6.52 0 0011.5 1.495 6.52 6.52 0 007.406.052a6.478 6.478 0 00-4.551 1.85 6.31 6.31 0 00-1.902 4.51c0 .813.166 1.66.496 2.522.276.72.671 1.467 1.176 2.221.801 1.194 1.902 2.44 3.27 3.702 2.265 2.092 4.509 3.537 4.604 3.596l.579.37a.784.784 0 00.842 0l.579-.37a37.02 37.02 0 004.604-3.596c1.367-1.263 2.468-2.508 3.27-3.702.504-.754.902-1.501 1.176-2.221.33-.862.495-1.71.495-2.522.003-.862-.17-1.7-.51-2.488zM11.5 16.893s-8.691-5.57-8.691-10.481c0-2.488 2.058-4.505 4.597-4.505A4.61 4.61 0 0111.5 4.358a4.61 4.61 0 014.094-2.45c2.54 0 4.597 2.016 4.597 4.504 0 4.912-8.691 10.48-8.691 10.48z\" />\n      )}\n    </svg>\n  </StyledButton>\n);\n\nexport default FavouriteButton;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nimport FavouriteButton from \"../../../components/FavouriteButton\";\nimport { PostInterface } from \"../../../interfaces\";\n\nconst Container = styled.div<{ active?: boolean }>`\n  flex: 0 0 auto;\n  display: flex;\n  flex-direction: row;\n  /* height: 172px; */\n  background-color: white;\n  border-radius: 0.875rem;\n  overflow: hidden;\n\n  & + & {\n    margin-top: 1rem;\n  }\n\n  &::before {\n    content: \"\";\n    width: 0.75rem;\n    background-color: ${(props) =>\n      props.active ? \"var(--color-blue)\" : \"transparent\"};\n    flex: 0 0 auto;\n  }\n`;\n\nconst ContentContainer = styled.div`\n  flex: auto;\n  display: flex;\n  flex-direction: row;\n  padding: 1rem;\n  padding-left: 0.8125rem;\n`;\n\nconst Avatar = styled.div`\n  flex: 0 0 auto;\n  margin-right: 1.375rem;\n`;\n\nconst Info = styled.div`\n  flex: auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst InfoHeader = styled.div`\n  display: flex;\n  margin-bottom: 0.5rem;\n`;\n\nconst Actions = styled.div`\n  margin-left: auto;\n`;\n\nconst Name = styled.h2`\n  font-size: 1rem;\n  margin: 0.25rem 0;\n`;\n\nconst Headline = styled.h3`\n  margin: 0;\n  font-size: 0.875rem;\n  font-weight: 400;\n  color: var(--color-grey-300);\n`;\n\nconst Description = styled.div`\n  margin-bottom: 1rem;\n  font-size: 1.125rem;\n  line-height: 1.4;\n`;\nconst Timestamp = styled.div`\n  margin-top: auto;\n  font-size: 0.875rem;\n  color: var(--color-grey-300);\n`;\n\nconst AvatarImage = styled.img`\n  width: 64px;\n  height: 64px;\n  border-radius: 32px;\n`;\n\ntype PostProps = {\n  key?: string;\n  active?: boolean;\n  data: PostInterface;\n  onClick?: () => void;\n  handleFavouriteToggle?(event: React.MouseEvent<HTMLButtonElement>): void;\n};\n\nfunction Post(props: PostProps) {\n  const { active, data, onClick, handleFavouriteToggle } = props;\n  return (\n    <Link to={`/posts/${data.id}`}>\n      <Container active={active} onClick={onClick}>\n        <ContentContainer>\n          <Avatar>\n            <AvatarImage src=\"https://api.adorable.io/avatars/64/abott@adorable.png\" />\n          </Avatar>\n          <Info>\n            <InfoHeader>\n              <div>\n                <Name>Arthur Simmmons</Name>\n                <Headline>Talent Hunter at ABCDEF company</Headline>\n              </div>\n              <Actions>\n                <FavouriteButton\n                  active={data.favourite}\n                  onClick={handleFavouriteToggle}\n                />\n              </Actions>\n            </InfoHeader>\n            <Description>{data.title}</Description>\n            <Timestamp>Today Â· You have connected</Timestamp>\n          </Info>\n        </ContentContainer>\n      </Container>\n    </Link>\n  );\n}\n\nexport default Post;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nimport { PostInterface } from \"../../../interfaces\";\n\nconst Container = styled.div`\n  background-color: white;\n  border-radius: 0.875rem;\n  padding: 1.5rem;\n`;\n\ntype PostDetailProps = {\n  data: PostInterface;\n};\n\nfunction PostDetail({ data }: PostDetailProps) {\n  return (\n    <Container>\n      {data.id}\n      <h2>{data.title}</h2>\n      <div>{data.description}</div>\n    </Container>\n  );\n}\n\nexport default PostDetail;\n","import axios from \"axios\";\nimport React from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { PostInterface } from \"../../../interfaces\";\n\n// State\n\ntype PostsState = {\n  jobs: PostInterface[];\n  talents: PostInterface[];\n  activePost: PostInterface | undefined;\n};\n\nconst initialState: PostsState = {\n  jobs: [],\n  talents: [],\n  activePost: undefined,\n};\n\n// Actions\n\nconst SET_ACTIVE_JOB = \"SET_ACTIVE_JOB\";\ninterface SetActiveJobAction {\n  type: typeof SET_ACTIVE_JOB;\n  payload: string;\n}\n\nconst TOGGLE_FAVOURITE_JOB = \"TOGGLE_FAVOURITE_JOB\";\ninterface ToggleFavouriteJobAction {\n  type: typeof TOGGLE_FAVOURITE_JOB;\n  payload: PostInterface;\n}\n\nconst UPDATE_JOBS = \"UPDATE_JOBS\";\ninterface UpdateJobsAction {\n  type: typeof UPDATE_JOBS;\n  payload: PostInterface[];\n}\n\ntype PostsActionTypes = SetActiveJobAction | ToggleFavouriteJobAction | UpdateJobsAction;\n\n// Reducer\n\nfunction PostsReducer(state: PostsState, action: PostsActionTypes): PostsState {\n  switch (action.type) {\n    case UPDATE_JOBS: {\n      const fetchedJobs = action.payload;\n      return {\n        ...state,\n        jobs: fetchedJobs.map((job: PostInterface) => ({\n          ...job,\n          active: false,\n        })),\n      };\n    }\n    case SET_ACTIVE_JOB: {\n      const activeJob = state.jobs.find((job: PostInterface) => job.id === action.payload);\n      return {\n        ...state,\n        jobs: state.jobs.map((job) => ({\n          ...job,\n          active: job.id === action.payload,\n        })),\n        activePost: activeJob,\n      };\n    }\n    case TOGGLE_FAVOURITE_JOB: {\n      return {\n        ...state,\n        jobs: state.jobs.map((job) =>\n          job === action.payload\n            ? {\n                ...job,\n                favourite: !job.favourite,\n              }\n            : job,\n        ),\n      };\n    }\n    default:\n      return state;\n  }\n}\n\n// Hook\n\ninterface PostsActions {\n  setActiveJob(id: string): void;\n  toggleFavouriteJob(job: PostInterface): void;\n  updateJobs(jobs: PostInterface[]): void;\n}\n\ninterface JobsResponseData {\n  jobs: PostInterface[];\n}\n\nexport default function usePostsReducer(): [PostsState, PostsActions] {\n  const [state, dispatch] = React.useReducer(PostsReducer, initialState);\n\n  const setActiveJob = React.useCallback((id: string): void => {\n    dispatch({ type: SET_ACTIVE_JOB, payload: id });\n  }, []);\n  const toggleFavouriteJob = React.useCallback((job: PostInterface): void => {\n    dispatch({ type: TOGGLE_FAVOURITE_JOB, payload: job });\n  }, []);\n  const updateJobs = React.useCallback((jobs: PostInterface[]): void => {\n    dispatch({ type: UPDATE_JOBS, payload: jobs });\n  }, []);\n  const actions: PostsActions = React.useMemo(() => {\n    return {\n      setActiveJob,\n      toggleFavouriteJob,\n      updateJobs,\n    };\n  }, [setActiveJob, toggleFavouriteJob, updateJobs]);\n\n  const match = useRouteMatch<{ id: string }>(\"/posts/:id\");\n  const id = match?.params?.id;\n\n  React.useEffect(() => {\n    axios.get<JobsResponseData>(\"/api/jobs\").then((res) => {\n      updateJobs(res.data.jobs);\n      if (id) setActiveJob(id);\n    });\n  }, [id, setActiveJob, updateJobs]);\n  React.useEffect(() => {\n    if (id) setActiveJob(id);\n  }, [id, setActiveJob]);\n\n  return [state, actions];\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  background-color: white;\n  border-radius: 0.875rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1.5rem;\n`;\n\nconst Title = styled.h1`\n  font-size: 1.5rem;\n  text-align : center;\n`;\nconst Subtitle = styled.h2`\n  font-size: 1rem;\n  font-weight: 400;\n  text-align : center;\n`;\n\nconst Quote = styled.p`\n  font-size: 0.8rem;\n  font-weight: 300;\n  text-align : center;\n`;\n\nfunction PostDetailPlaceholder(): React.ReactElement {\n  return (\n    <Container>\n      <Title>Ahh... I see you are looking for a job</Title>\n      <Subtitle>Tap a post on the left</Subtitle>\n      <Quote>âEvery experience in your life is being orchestrated to teach you something you need to know to move forwardâ<br />- Brian Tracy</Quote>\n    </Container>\n  );\n}\n\nexport default PostDetailPlaceholder;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nimport Main from \"../../components/Main\";\nimport Post from \"./components/Post\";\nimport PostDetail from \"./components/PostDetail\";\n\nimport { PostInterface } from \"../../interfaces\";\n\nimport usePostsReducer from \"./hooks/usePostsReducer\";\nimport PostDetailPlaceholder from \"./components/PostDetailPlaceholder\";\n\nconst ListContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst DetailsContainer = styled.div`\n  flex: 1;\n`;\n\ntype PostsScreenProps = {};\n\nfunction PostsScreen(): React.ReactElement {\n  const [state, actions] = usePostsReducer();\n  const { toggleFavouriteJob } = actions;\n\n  return (\n    <Main>\n      <Main.Col>\n        <ListContainer>\n          {state.jobs.map((job: PostInterface) => (\n            <Post\n              active={job.active}\n              key={job.id}\n              data={job}\n              handleFavouriteToggle={(e): void => {\n                e.stopPropagation();\n                toggleFavouriteJob(job);\n              }}\n            />\n          ))}\n        </ListContainer>\n      </Main.Col>\n      <Main.Col>\n        <DetailsContainer>\n          {state.activePost ? <PostDetail data={state.activePost} /> : <PostDetailPlaceholder />}\n        </DetailsContainer>\n      </Main.Col>\n    </Main>\n  );\n}\n\nexport default PostsScreen;\n","import React from \"react\";\n\nimport Main from \"../../components/Main\";\n\ntype FavouriteScreenProps = {};\n\nfunction FavouriteScreen(props: FavouriteScreenProps) {\n  return (\n    <Main>\n      <Main.Col>\n        <h1>Favourite Posts</h1>\n      </Main.Col>\n      <Main.Col>post detail</Main.Col>\n    </Main>\n  );\n}\n\nexport default FavouriteScreen;\n","import * as React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Layout from \"./components/Layout\";\nimport HomeScreen from \"./screens/Home/HomeScreen\";\nimport PostsScreen from \"./screens/Posts/PostsScreen\";\nimport FavouriteScreen from \"./screens/Favourite/FavouriteScreen\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Switch>\n          <Route exact path=\"/\" component={HomeScreen} />\n          <Route path=\"/posts\" component={PostsScreen} />\n          <Route path=\"/favourite\" component={FavouriteScreen} />\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}